standards and techniques discussed in this paper. Most of the open knowledge graphs discussed in
Section 10.1 - including BabelNet [351], DBpedia [291], Freebase [51], Wikidata [515], YAGO [481],
etc. — have either emerged from the Semantic Web community, or would later adopt its standards.

A.2. “Knowledge Graphs”: Pre 2012

Long before the 2012 announcement of the Google Knowledge Graph, various authors had used the
phrase “knowledge graph” in publications stretching back to the 40’s, but with unrelated meaning.
To the best of our knowledge, the first reference to a “knowledge graph” of relevance to the modern
meaning was in a paper by Schneider (1973) [440] in the area of computerised instructional systems
for education, where a knowledge graph — in his case a directed graph whose nodes are units of
knowledge (concepts) that a student should acquire, and whose edges denote dependencies between
such units of knowledge — is used to represent and store an instructional course on a computer. An
analogous notion of a “knowledge graph” was used by Marchi and Miguel (1974) [316] to study
paths through the knowledge units of an instructional course that yield the highest payoffs for
teachers and students in a game-theoretic sense. Around the same time, in a paper on linguistics,
Kiimmel (1973) [284] describes a numerical representation of knowledge, with “radicals” — referring
to some symbol with meaning — forming the nodes of a knowledge graph.

Further authors were to define instantiations of knowledge graphs in the 80’s. Rada (1986) [403]
defines a knowledge graph in the context of medical expert systems, where domain knowledge is
defined as a weighted graph, over which a “gradual” learning process is applied to refine knowledge
by making small change to weights. Bakker (1987) [25] defines a knowledge graph with the purpose
of accumulatively representing content gleaned from medical and sociological texts, with a focus
on causal relationships. Work on knowledge graphs from the same group would continue over the
years, with contributions by Stokman and de Vries (1988) [476] further introducing mereological
(part of) and instantiation (is a) relations to the knowledge graph, and thereafter by James [252],
Hoede [231], Popping [394], Zhang [539], amongst others, in the decades that followed [367]. The
notion of knowledge graph used in such works considered a fixed number of relations. Other
authors pursued their own parallel notions of knowledge graphs towards the end of the 80’s.
Rappaport and Gouyet (1988) [408] describe a user interface for visualising a knowledge-base -
composed of facts and rules — using a knowledge graph that connects related elements of the
knowledge-base. Srikanth and Jarke (1989) [470] use the notion of a knowledge graph to represent
the entities and relations involved in projects, particularly software projects, where partitioning
techniques are applied to the knowledge graph to modularise the knowledge required in the project.

Continuing to the 90’s, the notion of a “knowledge graph” would again arise in different,
seemingly independent settings. De Raedt et al. (1990) [116] propose a knowledge graph as a
directed graph composed of a taxonomy of instances being related with weighted edges to a
taxonomy of classes; they use symbolic learning to extract such knowledge graphs from exam-
ples. Machado and Freitas da Rocha (1990) [311] define a knowledge graph as an acyclic, weighted
AND-oR graph,’” defining fuzzy dependencies that connect observations to hypotheses through
intermediary nodes. These knowledge graphs are elicited from domain experts and can be used to
generate neural networks for selecting hypotheses from input observations. Knowledge graphs were
again later used by Dieng et al. (1992) [124] to represent the results of knowledge acquisition from
experts. Shimony et al. (1997) [455] rather define a knowledge graph based on a Bayesian knowledge
base — i.e., a Bayesian network that permits directed cycles —- over which Bayesian inference can be
applied. This definition was further built upon in a later work by Santos Jr. and Santos (1999) [436].

7An anp-or graph denotes dependency relations, where AND denotes a conjunction of sub-goals on which a goal depends,
while or denotes a disjunction of sub-goals.

105